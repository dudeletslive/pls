extends ../../layouts/default

block content
	+orderTabs
	div.tab-content.order-process
		div.tab-pane.fade.in.active#mailingList
			.container: .jumbotron: form(action="/return-address", method="post")
				.row
					.col-md-12.col-sm-12
						h2 
							| Select A List To Mail To
							span *
					.col-md-12.col-sm-12
						span.fa-stack.fa-lg.checkbox(data-input='list', data-type='checkbox')
							i.fa.fa-square.fa-stack-2x
							i.fa.fa-check.fa-stack-1x.fa-inverse
						input(name='list', type='checkbox', value='All Lists for ' + user.userID, class='hide')
						label(for="list") Please use the complete mailing list you keep on file
					.col-md-12.col-sm-12
						ul.boxes
							for list in lists
								li.box
									.col-md-12
										img(src='../images/list-name.png')
										h2= list.listName
										h5
											span#Count= Object.keys(JSON.parse(list.csvJSON)).length
											span &nbsp;Contacts in this list
										a.btn.btn-sm.btn-green(name='listOption', data-value=list.listName) Select This List
						select(name='list', class='form-control', class='hide')
							for list in lists
								option(value=list.listName)= list.listName
							option(value='All Lists for ' + user.userID) All
				.row
					.col-md-12
						p I will attach my current mailing list
						a(data-toggle='modal', data-target='#newList', type='button', class='btn btn-primary') Upload Mailing List
						br
						if mailerType === 'christmasLetter' || mailerType === 'thankYou'
							br
							span.fa-stack.fa-lg.checkbox(data-input='oneTime', data-type='checkbox')
								i.fa.fa-square.fa-stack-2x
								i.fa.fa-check.fa-stack-1x.fa-inverse
							input(type='checkbox', name='oneTime', value='This is a one time mailing list for this order only.', class='hide')
							label(for='oneTime') This is a one time mailing list for this order only.
					.col-md-12
						.line-0.visible-lg-block
				.row
					.col-md-12
						a(href="/order").btn.btn-success.btn-boder-green.pull-left Start Over
						button(type="submit").btn.btn-success.pull-right Continue
		.modal.fade(tab-index='-1', role='dialog', aria-labelledby='newList', aria-hidden='true', id='newList')
			.modal-dialog.modal-sm: .modal-content: form(method="post", action='/mailing-lists', id='listForm')
				.modal-body
					button.close(type="button", data-dismiss="modal")
						span(aria-hidden="true") &#215;
						span.sr-only Close
					h3 Create New Mailing List
					if errors
						.form-group
							.alert.alert-danger
								| Please complete all fields before continuing.
					.form-group(class=(errors != null ? 'has-error' : null)).clearfix
						input(type='hidden', name='redirect', value=redirect)
						input(type='hidden', name='userID', value=user.userID)
						input(type='hidden', name='csvJSON')
					.form-group(class=(errors != null ? 'has-error' : null)).clearfix
						label(for='listName') Name Your Mailing List
						input(name='listName', type='text', class='form-control')
					.form-group.clearfix
						input(name='mailingList', type='file', class='form-control', id='csv')
				.modal-footer
					button.btn.btn-default(type="button", data-dismiss="modal") Cancel
					button.btn.btn-primary(id="listNew", type="submit") Create List
block js
	+fileUploads
	script.
		$('a[name="listOption"]').each(function() {
			$(this).click(function() {
				$this = $(this);
				var selected = $this.attr('data-value');
				$('.fa-stack.checkbox[data-input="list"]').removeClass('checked');
				$this.text('Selected').parent().parent().addClass('selected').siblings('li').removeClass('selected').find('a[name="listOption"]').text('Select This List');
				$('select[name="list"]').val(selected).trigger('change');
			});
		});
		$('button#listNew[type="submit"]').click(function() {
			var $this = $(this);
			event.preventDefault();
			// Parse local CSV files
			$('input#csv').parse({
				config: {
					header: true,
					complete: function(results) {
						var str = JSON.stringify(results.data),
							str = str.replace(/first ?name/ig, "firstName"),
							str = str.replace(/last ?name/ig, "lastName"),
							str = str.replace(/(street|address) ?(1|one)/ig, "address1"),
							str = str.replace(/street|address ?2|two/ig, "address2"),
							str = str.replace(/street|address ?3|three/ig, "address3"),
							str = str.replace(/city|town|county/ig, "city"),
							str = str.replace(/state|province/ig, "state"),
							str = str.replace(/zip|postal ?code/ig, "zip");
							//- str = str.replace(/"/g, "'");
						$this.prop('disabled', true).html('<i class="fa fa-spinner fa-spin"></i>');
						$('input[name="csvJSON"').val(str).trigger('change');
						//- $.each(results.data, function(key, value) {
						//- 	var keys = Object.keys(value);
						//- 	$('pre#json').append(value["TITLE"] + '<br>');
						//-     console.log(value["TITLE"], keys);
						//- });
					}
				}
			});
			$('input[name="csvJSON"').change(function() {
				document.getElementById('listForm').submit();
			});
		});